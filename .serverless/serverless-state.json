{
  "service": {
    "service": "blogapp-serverless",
    "serviceObject": {
      "name": "blogapp-serverless"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "eu-west-1",
      "environment": {
        "PG_HOST": "db.cuihe12zvuil.eu-west-1.rds.amazonaws.com",
        "PG_PORT": "3306",
        "PG_USERNAME": "bLog_User",
        "PG_PASSWORD": "BLogPaSSwORd_12345",
        "PG_DATABASENAME": "db",
        "SECRET_KEY": "blog_uSER_api&#$@-stage",
        "APP_NAME": "Blog App"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "MainLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/blogapp-serverless-dev-main"
            }
          },
          "MigrateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/blogapp-serverless-dev-migrate"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "blogapp-serverless",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/blogapp-serverless-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/blogapp-serverless-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "blogapp-serverless",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "MainLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/blogapp-serverless/dev/1696405446658-2023-10-04T07:44:06.658Z/main.zip"
              },
              "Handler": "src/lambda.lambda_handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "blogapp-serverless-dev-main",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PG_HOST": "db.cuihe12zvuil.eu-west-1.rds.amazonaws.com",
                  "PG_PORT": "3306",
                  "PG_USERNAME": "bLog_User",
                  "PG_PASSWORD": "BLogPaSSwORd_12345",
                  "PG_DATABASENAME": "db",
                  "SECRET_KEY": "blog_uSER_api&#$@-stage",
                  "APP_NAME": "Blog App"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MainLogGroup"
            ]
          },
          "MigrateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/blogapp-serverless/dev/1696405446658-2023-10-04T07:44:06.658Z/migrate.zip"
              },
              "Handler": "src/lambda.lambda_migrate",
              "Runtime": "nodejs18.x",
              "FunctionName": "blogapp-serverless-dev-migrate",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PG_HOST": "db.cuihe12zvuil.eu-west-1.rds.amazonaws.com",
                  "PG_PORT": "3306",
                  "PG_USERNAME": "bLog_User",
                  "PG_PASSWORD": "BLogPaSSwORd_12345",
                  "PG_DATABASENAME": "db",
                  "SECRET_KEY": "blog_uSER_api&#$@-stage",
                  "APP_NAME": "Blog App"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MigrateLogGroup"
            ]
          },
          "MainLambdaVersionKusg8KhEh9M4Vp4ruxrwyb3aE9oStz3fkWxe84DGn7s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MainLambdaFunction"
              },
              "CodeSha256": "QxgJ0ZapOmrI3UgqGgnKuZHG9YIq+oxvvuwAHga2BSQ="
            }
          },
          "MigrateLambdaVersionwFEfgXmALbhMITfxs1bxjIF5r9uLmrq2SRWnGm8ii44": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MigrateLambdaFunction"
              },
              "CodeSha256": "QxgJ0ZapOmrI3UgqGgnKuZHG9YIq+oxvvuwAHga2BSQ="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-blogapp-serverless",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceAnyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{any+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMigrate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "migrate",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAnyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAnyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "MainLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodMigrateGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMigrate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MigrateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "MigrateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1696405142559": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAnyVarAny",
              "ApiGatewayMethodMigrateGet"
            ]
          },
          "MainLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MainLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "MigrateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MigrateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-blogapp-serverless-dev-ServerlessDeploymentBucketName"
            }
          },
          "MainLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MainLambdaVersionKusg8KhEh9M4Vp4ruxrwyb3aE9oStz3fkWxe84DGn7s"
            },
            "Export": {
              "Name": "sls-blogapp-serverless-dev-MainLambdaFunctionQualifiedArn"
            }
          },
          "MigrateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MigrateLambdaVersionwFEfgXmALbhMITfxs1bxjIF5r9uLmrq2SRWnGm8ii44"
            },
            "Export": {
              "Name": "sls-blogapp-serverless-dev-MigrateLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-blogapp-serverless-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-plugin-typescript",
      "serverless-plugin-optimize",
      "serverless-offline",
      "serverless-sequelize-migrations"
    ],
    "pluginsData": {},
    "functions": {
      "main": {
        "handler": "src/lambda.lambda_handler",
        "timeout": 30,
        "events": [
          {
            "http": {
              "method": "any",
              "path": "{any+}",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "blogapp-serverless-dev-main",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": [],
          "artifact": "/home/back/Documents/src/nodejs/nest/test/BlogApp/.serverless/main.zip"
        },
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "MainLambdaVersionKusg8KhEh9M4Vp4ruxrwyb3aE9oStz3fkWxe84DGn7s"
      },
      "migrate": {
        "handler": "src/lambda.lambda_migrate",
        "timeout": 30,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "migrate",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "blogapp-serverless-dev-migrate",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": [],
          "artifact": "/home/back/Documents/src/nodejs/nest/test/BlogApp/.serverless/migrate.zip"
        },
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "MigrateLambdaVersionwFEfgXmALbhMITfxs1bxjIF5r9uLmrq2SRWnGm8ii44"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "blogapp-serverless",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "package": {
        "patterns": [
          "!node_modules/aws-sdk/**",
          "!node_modules/**/aws-sdk/**"
        ],
        "individually": true,
        "artifactsS3KeyDirname": "serverless/blogapp-serverless/dev/code-artifacts",
        "artifactDirectoryName": "serverless/blogapp-serverless/dev/1696405446658-2023-10-04T07:44:06.658Z"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/blogapp-serverless/dev/1696405446658-2023-10-04T07:44:06.658Z",
    "artifact": ""
  }
}